name: 'Start Self-hosted Runner'
description: 'Configure and start a self-hosted runner with an action'
inputs:
  linuxUser:  
    required: true
    type: string
    description: User used to access the virtual machine
  linuxUserPass:  
    required: true
    type: string
    description: Password of the user used to access the virtual machine
  linuxIP:  
    required: true
    type: string
    description: IP of the virtual machine
  unattended:  
    required: false
    type: string
    description: Disable interactive prompts for missing arguments. Defaults will be used for missing options
  url:  
    required: true
    type: string
    description: Repository to add the runner to. Required if unattended
  token:  
    required: true
    type: string
    description: Registration token. Required if unattended
  name:  
    required: false
    type: string
    description: "Name of the runner to configure (default: <vm_name>)"
  runnergroup:  
    required: false
    type: string
    description: "Name of the runner group to add this runner to (default: default)"
  labels:  
    required: false
    type: string
    description: Custom labels that will be added to the runner. This option is mandatory if --no-default-labels is used.
  noDefaultLabels:  
    required: false
    type: string
    description: "Disables adding the default labels: 'self-hosted,Linux,X64'"
  local:  
    required: false
    type: string
    description: Removes the runner config files from your local machine. Used as an option to the remove command
  work:  
    required: false
    type: string
    description: "Relative runner work directory (default: _work)"
  replace:  
    required: false
    type: string
    description: "Replace any existing runner with the same name (default: false)"
  pat:  
    required: false
    type: string
    description: GitHub personal access token with repo scope. Used for checking network connectivity when executing `./run.sh --check`
  disableupdate:  
    required: false
    type: string
    description: Disable self-hosted runner automatic update to the latest released version
  ephemeral:  
    required: false
    type: string
    description: "Configure the runner to only take one job and then let the service un-configure the runner after the job finishes (default: false)"
runs:
  using: "composite"
  steps:  
    - name: Configure the SSH connection
      run: | 
        ssh-keygen -t rsa -N "" -f ~/.ssh/shrsshkey
        ls -l ~/.ssh/shrsshkey*
        chmod 600 ~/.ssh/shrsshkey
        chmod 644 ~/.ssh/shrsshkey.pub
        sudo apt update
        sudo apt -y install sshpass
        ssh-keyscan -H ${{ inputs.linuxIP }} >> ~/.ssh/known_hosts
        sshpass -p "${{ inputs.linuxUserPass }}" ssh-copy-id -i ~/.ssh/shrsshkey.pub ${{ inputs.linuxUser }}@${{ inputs.linuxIP }}
        ssh -i ~/.ssh/shrsshkey  ${{ inputs.linuxUser }}@${{ inputs.linuxIP }}
      shell: bash
    - name: Download self-hosted runner
      run: | 
        # cd /
        # cd tmp
        mkdir actions-runner; cd actions-runner
        curl -o actions-runner-linux-x64-2.317.0.tar.gz -L https://github.com/actions/runner/releases/download/v2.317.0/actions-runner-linux-x64-2.317.0.tar.gz
        echo "9e883d210df8c6028aff475475a457d380353f9d01877d51cc01a17b2a91161d  actions-runner-linux-x64-2.317.0.tar.gz" | shasum -a 256 -c
        tar xzf ./actions-runner-linux-x64-2.317.0.tar.gz
      shell: bash
    - name: Configure self-hosted runner
      run: | 
        # cd /
        # cd tmp
        cd actions-runner
        ./config.sh \
          $(if [ "${{ inputs.unattended }}" = "yes" ]; then echo "--unattended"; fi) \
          --url "${{ inputs.url }}" \
          --token "${{ inputs.token }}" \
          $(if [ ! -z "${{ inputs.name }}" ]; then echo "--name ${{ inputs.name }}"; fi) \
          --runnergroup $(if [ ! -z "${{ inputs.runnergroup }}" ]; then echo "${{ inputs.runnergroup }}"; else echo "default"; fi) \
          --labels $(if [ ! -z "${{ inputs.labels }}" ]; then echo "${{ inputs.labels }}"; else echo "actions"; fi) \
          $(if [ "${{ inputs.noDefaultLabels }}" = "yes" ]; then echo "--no-default-labels"; fi) \
          $(if [ "${{ inputs.local }}" = "yes" ]; then echo "--local"; fi) \
          $(if [ ! -z "${{ inputs.work }}" ]; then echo "--work ${{ inputs.work }}"; fi) \
          $(if [ "${{ inputs.replace }}" = "yes" ]; then echo "--replace"; fi) \
          $(if [ ! -z "${{ inputs.pat }}" ]; then echo "--pat ${{ inputs.pat }}"; fi) \
          $(if [ "${{ inputs.disableupdate }}" = "yes" ]; then echo "--disableupdate"; fi) \
          $(if [ "${{ inputs.ephemeral }}" = "yes" ]; then echo "--ephemeral"; fi)
        # ./run.sh
        # nohup ./run.sh &
        sudo ./svc.sh install
        sudo ./svc.sh start
        sudo ./svc.sh status
        exit
        sleep 5000000000000000
      shell: bash

    - name: Sleep for 30 seconds
      uses: jakejarvis/wait-action@master
      with:
        time: '30m'
      shell: bash